import os
import pandas as pd
os.chdir('C:/Users/Adrian/Documents/Data_Journalism/DataCamp\
         Lesson Datafiles/')
df = pd.read_csv('tweets.csv')
#listcomprehensions
squares = [i ** 2 for i in range(10)]
print(squares)
#nested listcomprehensions
matrix = [[col for col in range(5)] for row in range(5)]
for row in matrix:
    print(row)

#The basic syntax for a list comprehension is [output expression for iterator variable in iterable]

#List comprehensions with conditionals

fellowship = ['frodo', 'samwise', 'merry', 'aragorn', 'legolas', 'boromir',
              'gimli']
new_fellowship = [member for member in fellowship if len(member) >= 7]
print(new_fellowship)

new_fellowship2 = [member if len(member) >= 7 else "" for member in fellowship]
print(new_fellowship2)

#Dict comprehensions
new_fellowship3 = {member: len(member) for member in fellowship}
print(new_fellowship3)

#generatorexpressions
result = (num for num in range(31))

print(next(result))
print(next(result))
print(next(result))
print(next(result))
print(next(result))

for value in result:
    print(value)

lannister = ['cersei', 'jaime', 'tywin', 'tyrion', 'joffrey']

result2 = (len(person) for person in lannister)

for value in result2:
    print(value)

#generatorfunctions


def get_lengths(input_list):
    """Generator function that yields the
    length of the strings in input_list."""

    # Yield the length of a string
    for person in input_list:
        yield len(person)


# Print the values generated by get_lengths()
for value in get_lengths(lannister):
    print(value)

#timestamps from real world tweet data

# Extract the created_at column from df: tweet_time
tweet_time = df['created_at']

# Extract the clock time: tweet_clock_time
tweet_clock_time = [entry[11:19] for entry in tweet_time]

# Print the extracted times
print(tweet_clock_time)

#real world example with conditional

# Extract the created_at column from df: tweet_time
tweet_time = df['created_at']

# Extract the clock time: tweet_clock_time
tweet_clock_hour = [entry[11:19] for entry in tweet_time if entry[17:19] == '19']

# Print the extracted times
print(tweet_clock_hour)
